@using Skyline.WebMvc.Authorization
@model Skyline.WebMvc.ViewModels.ContactDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Contact</h4>
    <hr />
    <dl class="dl-h">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Province)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Province)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Zip)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Zip)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>
    </dl>
</div>

@if (Model.Status != Skyline.ApplicationCore.Entities.ContactAggregate.ContactStatus.Approved)
{
    if ((await AuthorizationService.AuthorizeAsync(User, Model, ContactOperations.Approve)).Succeeded)
    {
        <form style="display:inline;" method="post" asp-action="EditStatus">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@Skyline.ApplicationCore.Entities.ContactAggregate.ContactStatus.Approved" />
            <button type="submit" class="btn btn-xs btn-success">Approve</button>
        </form>
    }
}
@if (Model.Status != Skyline.ApplicationCore.Entities.ContactAggregate.ContactStatus.Rejected)
{
    if ((await AuthorizationService.AuthorizeAsync(User, Model, ContactOperations.Reject)).Succeeded)
    {
        <form style="display:inline;" method="post" asp-action="EditStatus">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@Skyline.ApplicationCore.Entities.ContactAggregate.ContactStatus.Rejected" />
            <button type="submit" class="btn btn-xs btn-danger">Reject</button>
        </form>
    }
}

<div>
    <br />
    <a asp-action="Index" class="btn btn-info">Back to List</a>
</div>